{"version":3,"sources":["../src/module.js"],"names":[],"mappings":"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","file":"module.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport TimeSeries from 'app/core/time_series2';\r\nimport _ from 'lodash';\r\nimport {directive_gauge} from './gauge'\r\n\r\n// Set and populate defaults\r\nvar panelDefaults = {\r\n  links: [],\r\n  datasource: null,\r\n  maxDataPoints: 3,\r\n  interval: null,\r\n  targets: [{}],\r\n  cacheTimeout: null,\r\n  measures:{\r\n    pointer:{name:'',target:'',thresholds:\"0,100\",valueName:'avg'},\r\n    water_mark:{name:'',target:'',thresholds:\"0,1\",valueName:'avg',value_as_space:false},\r\n    temperature:{name:'',target:'',thresholds:\"0,1\",valueName:'avg'},\r\n    indicators:[],\r\n    series_names:[]\r\n  },\r\n  multigauge:{config:{},data:{},indicators:[]}\r\n  //{size:200, color_scale: {name:ctrl.panel.data.temperature.name, min:ctrl.panel.data.temperature.min, max:ctrl.panel.data.temperature.max}, util_scale: {name:ctrl.panel.data.water_mark.name, min:ctrl.panel.data.water_mark.min, max:ctrl.panel.data.water_mark.max}, measure: {name:ctrl.panel.data.pointer.name, min:ctrl.panel.data.pointer.min, max:ctrl.panel.data.pointer.max}}\r\n  //{color_scale:ctrl.panel.data.temperature.value, util_scale:ctrl.panel.data.water_mark.value, measure:ctrl.panel.data.pointer.value}\r\n  //data:{pointer:{},water_mark:{},temperature:{},indicators:[]}\r\n};\r\n\r\n//register the directive\r\nangular.module('grafana.directives').directive('gauge',['$timeout',directive_gauge]);\r\n\r\nclass MultiGaugeCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $rootScope) {\r\n    super($scope, $injector);\r\n    this.$rootScope = $rootScope;\r\n    _.defaults(this.panel, panelDefaults);\r\n    this.valueNameOptions = ['avg', 'current', 'min','max','total'];\r\n\r\n    this.events.on('data-received', this.onDataReceived.bind(this));\r\n    this.events.on('data-error', this.onDataError.bind(this));\r\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.addEditorTab('Options', 'public/plugins/grafana-multigauge-panel/editor.html', 2);\r\n    //this.unitFormats = kbn.getUnitFormats();\r\n  }\r\n  onDataError(err) {\r\n    this.onDataReceived([]);\r\n  }\r\n  onDataReceived(dataList) {\r\n    this.dataList=dataList;\r\n    this.refreshData();\r\n  }\r\n  refreshData(){\r\n    this.panel.measures.series_names=_.size(this.dataList)>0 ? _.map(this.dataList,s=>s.target) : [];\r\n    _.each(['pointer','water_mark','temperature'],m=>{\r\n      var c =this.getData(this.panel.measures[m],this.dataList)[0];\r\n      this.panel.multigauge.config[m] =c;\r\n      this.panel.multigauge.data[m] = c.value;\r\n    });\r\n    this.panel.multigauge.indicators=[];\r\n    _.each(this.panel.measures['indicators'], m=>{\r\n      var matched_series=this.getData(m,this.dataList); //add all indicators regardless having data or not\r\n      this.panel.multigauge.indicators = this.panel.multigauge.indicators.concat(matched_series);\r\n    });\r\n    this.$timeout(this.render.bind(this));\r\n  }\r\n  getData(measure,series){\r\n    //var measure=this.panel.measures[measure_name];\r\n    var _re=measure.target.match(/^\\/(.+)\\/$/);\r\n    var re= new RegExp(_re ? _re[1] : '^'+measure.target+'$');\r\n    var matched_series=_.filter(series, s=>s.target.search(re)>=0);\r\n    if(_.size(matched_series)>0){\r\n      return _.map(matched_series,s=>{return this.combineMetaAndData(measure,s);});\r\n    }else {\r\n      return [this.combineMetaAndData(measure)];\r\n    }\r\n  }\r\n  combineMetaAndData(measure,series){\r\n    var v=_.assign({\r\n      min: +measure.thresholds.split(',')[0],\r\n      max: +measure.thresholds.split(',')[1],\r\n      value: null\r\n    },measure);\r\n    if(v.name=='') v.name=v.target;\r\n    if(series && series.target!=undefined) v.target=series.target;\r\n    if(series && _.size(series.datapoints)>0){\r\n      var ts = new TimeSeries({datapoints: series.datapoints, alias: series.target, });\r\n      ts.flotpairs = ts.getFlotPairs();\r\n      v.value=Math.round(100*ts.stats[measure.valueName])/100;\r\n    }\r\n    return v;\r\n  }\r\n  addIndicator(){\r\n    this.panel.measures.indicators.push({name:'',target:'',thresholds:''})\r\n  }\r\n  removeIndicator(indicator){\r\n    _.remove(this.panel.measures.indicators,indicator);\r\n    this.refreshData();\r\n  }\r\n}\r\nMultiGaugeCtrl.templateUrl = 'module.html';\r\n\r\nexport {\r\n  MultiGaugeCtrl as PanelCtrl\r\n};\r\n"]}